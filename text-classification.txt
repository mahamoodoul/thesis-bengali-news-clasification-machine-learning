# loading the necessary libraries
%matplotlib inline
import numpy as np
import matplotlib .pyplot as plt
import seaborn as sns; sns.set()
from sklearn.datasets import fetch_20newsgroups
data = fetch_20newsgroups()
data.target_names

# Defining all categories
categories = ['alt.atheism','comp.graphics','comp.os.ms-windows.misc','comp.sys.ibm.pc.hardware','comp.sys.mac.hardware',
              'comp.windows.x','misc.forsale','rec.autos','rec.motorcycles','rec.sport.baseball','rec.sport.hockey','sci.crypt',
              'sci.electronics','sci.med','sci.space','soc.religion.christian','talk.politics.guns','talk.politics.mideast',
              'talk.politics.misc','talk.religion.misc']
# Training the data on these categories
train = fetch_20newsgroups(subset='train', categories=categories)
# Testing the data for these categories
test = fetch_20newsgroups(subset='test', categories=categories)

3# Printing training data
print(train.data[5])


# Printing training data
# Print(train.data[5])
# Importing necessary packages
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinominalNB
from sklearn.pipeline import make_pipeline
# Creating a model based on Multinomial Navie Bayes
model = make_pipeline(TfidfVectorizer(), MultinominalNB())
# training the model with trainging data
model.fit(train.data, train.target)
# Creating lables for the test data
labels = model.predict(test.data)




# Creating confusion matrix and heat map
from sklearn.metrics import confusion_matrix
mat = confusion_matrix(test.target, labels)
sns.heatmap(mat.T, square=True, annot=True, fmt='d', cbar=False, xticklabels=train.target_names,yticklables= train.target_names)
# Plotting Heatmap of confusion Matrix
plt.xlabel('true label')
plt.ylabel('predicted label')